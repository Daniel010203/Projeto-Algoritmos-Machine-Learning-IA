# Importa o módulo re, que é a biblioteca de expressões regulares do Python. 
import re

# Função que analiza os sentimentos.
def analyze_sentiment():
    # Entrada do usuário
    comentario = input()


    # Divisão do comentário em palavras.
    palavras = re.findall(r'\b\w+\b', comentario.lower())
    
    # Lista de palavras positivas, negativas e neutras para classificação.
    positivas = ["bom", "boa", "ótimo", "excelente", "maravilhoso", "gostei", "incrível"]
    negativas = ["ruim", "péssimo", "horrível", "terrível", "odeio"]
    neutras = ["mas", "deixou", "apesar", "embora"]


    # Contagem de palavras positivas, negativas e neutras
    count_positivo = sum(palavra in positivas for palavra in palavras)
    count_negativo = sum(palavra in negativas for palavra in palavras)
    
    # TOD0: Conte quantas palavras neutras estão presentes no comentáriopara classificação.  
    count_neutro = sum(palavra in neutras for palavra in palavras)
    
    # Verifica se há mais palavras positivas do que negativas no comentário e se não há palavras neutras.
    # Se essa condição for verdadeira, o comentário é considerado positivo.
    if count_positivo > count_negativo and count_neutro == 0:
        return "Positivo"
    # TOD0: Complete a codição para determinar o sentimento com base na contagem de palavras
    
    # Verifica se há mais palavras negativas do que positivas no comentário e se não há palavras neutras. Se essa condição for verdadeira, o comentário é considerado negativo.
    if count_negativo > count_positivo and count_neutro == 0:
        return "Negativo"
        
    # Verifica se há mais palavras neutras do que positivas e negativas. Se essa condição for verdadeira, o comentário é considerado neutro.
    if count_neutro > count_positivo and count_negativo == 0:
        return "Neutro"    


# Saída esperada
sentimento = analyze_sentiment()
print("Sentimento:", sentimento)


EXPLICAÇÃO DO CÓDIGO:
Este código tem como objetivo analisar o sentimento de um comentário inserido pelo usuário. Vamos explicar suas funcionalidades:

1. **Importação do módulo re**: O código começa importando o módulo `re`, que é a biblioteca de expressões regulares do Python. Isso permite a utilização de expressões regulares para manipulação de strings.

2. **Função `analyze_sentiment()`**: Esta função recebe um comentário inserido pelo usuário como entrada. Ela realiza as seguintes etapas:

   - Divide o comentário em palavras utilizando expressões regulares (`re.findall(r'\b\w+\b', comentario.lower())`). Este passo converte todas as palavras do comentário para minúsculas e as divide em uma lista.
   
   - Define listas de palavras positivas, negativas e neutras para classificação.
   
   - Conta o número de palavras positivas e negativas no comentário usando compreensões de lista (`sum(palavra in positivas for palavra in palavras)` e `sum(palavra in negativas for palavra in palavras)`).
   
   - Verifica se há mais palavras positivas do que negativas e se não há palavras neutras. Se essa condição for verdadeira, o comentário é considerado positivo.
   
   - Verifica se há mais palavras negativas do que positivas e se não há palavras neutras. Se essa condição for verdadeira, o comentário é considerado negativo.
   
   - Verifica se há mais palavras neutras do que positivas e negativas. Se essa condição for verdadeira, o comentário é considerado neutro.
   
   - Retorna o sentimento do comentário (positivo, negativo ou neutro) com base nas verificações anteriores.

3. **Saída esperada**: O resultado da função `analyze_sentiment()` é atribuído à variável `sentimento`, que é então impressa na tela junto com a mensagem "Sentimento:". 

O objetivo deste código é automatizar a análise de sentimentos em comentários de texto, classificando-os como positivos, negativos ou neutros com base nas palavras utilizadas no comentário. Isso pode ser útil em diversas aplicações, como análise de feedbacks de clientes em redes sociais, avaliações de produtos, entre outros.
